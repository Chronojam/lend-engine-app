<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductTagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductTagRepository extends EntityRepository
{

    /**
     * @param $name
     * @return array
     */
    public function getOneByName($name)
    {
        $repository = $this->getEntityManager()->getRepository('AppBundle:ProductTag');
        $query = $repository->createQueryBuilder('t')
            ->where('t.name LIKE :string')
            ->setParameter('string', $name)
            ->getQuery();
        return $query->getResult();
    }

    /**
     * @param $name
     * @return array
     */
    public function searchByName($name)
    {
        $repository = $this->getEntityManager()->getRepository('AppBundle:ProductTag');
        $query = $repository->createQueryBuilder('t')
            ->where('t.name LIKE :string')
            ->setParameter('string', '%'.$name.'%')
            ->getQuery();
        return $query->getResult();
    }

    /**
     * @return array
     */
    public function findAllOrderedByName()
    {
        return $this->findAllOrderedBySort();
    }

    /**
     * @return array
     */
    public function findAllOrderedBySort()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT t FROM AppBundle:ProductTag t ORDER BY t.sort, t.name ASC')
            ->getResult();
    }

    /**
     * Number of items that a tags is assigned to
     * @param $id
     * @return array
     * @throws \Doctrine\DBAL\DBALException
     */
    public function countProducts($id)
    {
        $sql = "SELECT COUNT(i2t.inventory_item_id) AS cnt
              FROM inventory_item_product_tag i2t
              LEFT JOIN inventory_item i ON (i2t.inventory_item_id = i.id)
              WHERE i2t.product_tag_id = '{$id}'
              AND i.is_active = 1 ";
        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();
        return $stmt->fetchAll();
    }

    /**
     * Get all tags with given IDs
     * Used to return a list of choices for the Tags element on the product page, post submit, for validation
     * @param $ids
     * @return array
     */
    function getByIds($ids)
    {
        if (is_array($ids)) {
            return $this->getEntityManager()
                ->createQuery('SELECT t FROM AppBundle:ProductTag t WHERE t.id IN ('.implode(',',$ids).')')
                ->getResult();
        } else {
            return array();
        }
    }

}
